{"version":3,"sources":["webpack:///./src/templates/blog-list-template.js"],"names":["BlogList","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","title","description","className","map","node","frontmatter","path","styles","item","to","content","excerpt","meta","date","rel","React","Component","blogListQuery"],"mappings":"iTAOqBA,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MADzC,EAG2BJ,KAAKC,MAAMI,YAArCC,EAHD,EAGCA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALR,EAGcG,SAGfC,EACJJ,EAAc,GAAM,EAAI,SAAW,UAAYA,EAAc,GAAGK,WAC5DC,EAAW,UAAYN,EAAc,GAAGK,WAE9C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,MAAM,YACNC,YAAY,uCAEd,yBAAKC,UAAU,aACb,uDACChB,EAAMiB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKC,YAAYC,KACzD,OACE,6BAASJ,UAAWK,IAAOC,MACzB,yBAAKN,UAAWK,IAAOP,OACrB,4BACE,kBAAC,OAAD,CAAMS,GAAIL,EAAKC,YAAYC,MAAON,KAGtC,yBAAKE,UAAWK,IAAOG,SACrB,2BAAIN,EAAKO,SACT,yBAAKT,UAAWK,IAAOK,MACrB,kBAAC,OAAD,CAAMH,GAAIL,EAAKC,YAAYC,MACzB,4BAAQJ,UAAU,OAAlB,cAEF,4BAAKE,EAAKC,YAAYQ,aAO9BnB,GACA,kBAAC,OAAD,CAAMQ,UAAU,MAAMO,GAAIZ,EAAUiB,IAAI,QAAxC,kBAIAnB,GACA,kBAAC,OAAD,CAAMO,UAAU,MAAMO,GAAIV,EAAUe,IAAI,QAAxC,gB,GA/C0BC,IAAMC,WAwD/BC,EAAa","file":"component---src-templates-blog-list-template-js-77b9dfb5be59de925caa.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/SEO\"\nimport \"../scss/main.scss\"\nimport styles from \"../scss/blog.module.scss\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage  -1 === 1 ? \"/blog/\" : \"/blog/\" + (currentPage - 1).toString()\n    const nextPage = \"/blog/\" + (currentPage + 1).toString()\n\n    return (\n      <Layout>\n        <Seo\n          title=\"All posts\"\n          description=\"Recent posts from the Rhymery team\"\n        />\n        <div className=\"blog-list\">\n          <h1>Latest Poems &amp; Writings</h1>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.frontmatter.path\n            return (\n              <article className={styles.item}>\n                <div className={styles.title}>\n                  <h2>\n                    <Link to={node.frontmatter.path}>{title}</Link>\n                  </h2>\n                </div>\n                <div className={styles.content}>\n                  <p>{node.excerpt}</p>\n                  <div className={styles.meta}>\n                    <Link to={node.frontmatter.path}>\n                      <button className=\"btn\">Read More</button>\n                    </Link>\n                    <h4>{node.frontmatter.date}</h4>\n                  </div>\n                </div>\n              </article>\n            )\n          })}\n\n          {!isFirst && (\n            <Link className=\"btn\" to={prevPage} rel=\"prev\">\n              Previous Page\n            </Link>\n          )}\n          {!isLast && (\n            <Link className=\"btn\" to={nextPage} rel=\"next\">\n              Next Page\n            </Link>\n          )}\n        </div>\n      </Layout>\n    )\n  }\n}\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YY\")\n            path\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}